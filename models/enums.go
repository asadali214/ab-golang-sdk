/*
Package maxioadvancedbilling

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

// WebhookStatusEnum is a string enum.
type WebhookStatusEnum string

const (
	WebhookStatusEnum_SUCCESSFUL WebhookStatusEnum = "successful"
	WebhookStatusEnum_FAILED     WebhookStatusEnum = "failed"
	WebhookStatusEnum_PENDING    WebhookStatusEnum = "pending"
	WebhookStatusEnum_PAUSED     WebhookStatusEnum = "paused"
)

// WebhookOrderEnum is a string enum.
type WebhookOrderEnum string

const (
	WebhookOrderEnum_NEWESTFIRST WebhookOrderEnum = "newest_first"
	WebhookOrderEnum_OLDESTFIRST WebhookOrderEnum = "oldest_first"
)

// WebhookSubscriptionEnum is a string enum.
type WebhookSubscriptionEnum string

const (
	WebhookSubscriptionEnum_BILLINGDATECHANGE                              WebhookSubscriptionEnum = "billing_date_change"
	WebhookSubscriptionEnum_COMPONENTALLOCATIONCHANGE                      WebhookSubscriptionEnum = "component_allocation_change"
	WebhookSubscriptionEnum_CUSTOMERCREATE                                 WebhookSubscriptionEnum = "customer_create"
	WebhookSubscriptionEnum_CUSTOMERUPDATE                                 WebhookSubscriptionEnum = "customer_update"
	WebhookSubscriptionEnum_DUNNINGSTEPREACHED                             WebhookSubscriptionEnum = "dunning_step_reached"
	WebhookSubscriptionEnum_EXPIRINGCARD                                   WebhookSubscriptionEnum = "expiring_card"
	WebhookSubscriptionEnum_EXPIRATIONDATECHANGE                           WebhookSubscriptionEnum = "expiration_date_change"
	WebhookSubscriptionEnum_INVOICEISSUED                                  WebhookSubscriptionEnum = "invoice_issued"
	WebhookSubscriptionEnum_METEREDUSAGE                                   WebhookSubscriptionEnum = "metered_usage"
	WebhookSubscriptionEnum_PAYMENTFAILURE                                 WebhookSubscriptionEnum = "payment_failure"
	WebhookSubscriptionEnum_PAYMENTSUCCESS                                 WebhookSubscriptionEnum = "payment_success"
	WebhookSubscriptionEnum_DIRECTDEBITPAYMENTPENDING                      WebhookSubscriptionEnum = "direct_debit_payment_pending"
	WebhookSubscriptionEnum_DIRECTDEBITPAYMENTPAIDOUT                      WebhookSubscriptionEnum = "direct_debit_payment_paid_out"
	WebhookSubscriptionEnum_DIRECTDEBITPAYMENTREJECTED                     WebhookSubscriptionEnum = "direct_debit_payment_rejected"
	WebhookSubscriptionEnum_PREPAIDSUBSCRIPTIONBALANCECHANGED              WebhookSubscriptionEnum = "prepaid_subscription_balance_changed"
	WebhookSubscriptionEnum_PREPAIDUSAGE                                   WebhookSubscriptionEnum = "prepaid_usage"
	WebhookSubscriptionEnum_REFUNDFAILURE                                  WebhookSubscriptionEnum = "refund_failure"
	WebhookSubscriptionEnum_REFUNDSUCCESS                                  WebhookSubscriptionEnum = "refund_success"
	WebhookSubscriptionEnum_RENEWALFAILURE                                 WebhookSubscriptionEnum = "renewal_failure"
	WebhookSubscriptionEnum_RENEWALSUCCESS                                 WebhookSubscriptionEnum = "renewal_success"
	WebhookSubscriptionEnum_SIGNUPFAILURE                                  WebhookSubscriptionEnum = "signup_failure"
	WebhookSubscriptionEnum_SIGNUPSUCCESS                                  WebhookSubscriptionEnum = "signup_success"
	WebhookSubscriptionEnum_STATEMENTCLOSED                                WebhookSubscriptionEnum = "statement_closed"
	WebhookSubscriptionEnum_STATEMENTSETTLED                               WebhookSubscriptionEnum = "statement_settled"
	WebhookSubscriptionEnum_SUBSCRIPTIONCARDUPDATE                         WebhookSubscriptionEnum = "subscription_card_update"
	WebhookSubscriptionEnum_SUBSCRIPTIONGROUPCARDUPDATE                    WebhookSubscriptionEnum = "subscription_group_card_update"
	WebhookSubscriptionEnum_SUBSCRIPTIONPRODUCTCHANGE                      WebhookSubscriptionEnum = "subscription_product_change"
	WebhookSubscriptionEnum_SUBSCRIPTIONSTATECHANGE                        WebhookSubscriptionEnum = "subscription_state_change"
	WebhookSubscriptionEnum_TRIALENDNOTICE                                 WebhookSubscriptionEnum = "trial_end_notice"
	WebhookSubscriptionEnum_UPCOMINGRENEWALNOTICE                          WebhookSubscriptionEnum = "upcoming_renewal_notice"
	WebhookSubscriptionEnum_UPGRADEDOWNGRADEFAILURE                        WebhookSubscriptionEnum = "upgrade_downgrade_failure"
	WebhookSubscriptionEnum_UPGRADEDOWNGRADESUCCESS                        WebhookSubscriptionEnum = "upgrade_downgrade_success"
	WebhookSubscriptionEnum_PENDINGCANCELLATIONCHANGE                      WebhookSubscriptionEnum = "pending_cancellation_change"
	WebhookSubscriptionEnum_SUBSCRIPTIONPREPAYMENTACCOUNTBALANCECHANGED    WebhookSubscriptionEnum = "subscription_prepayment_account_balance_changed"
	WebhookSubscriptionEnum_SUBSCRIPTIONSERVICECREDITACCOUNTBALANCECHANGED WebhookSubscriptionEnum = "subscription_service_credit_account_balance_changed"
)

// CreditTypeEnum is a string enum.
// The type of credit to be created when upgrading/downgrading. Defaults to the component and then site setting if one is not provided.
// Available values: `full`, `prorated`, `none`.
type CreditTypeEnum string

const (
	CreditTypeEnum_FULL     CreditTypeEnum = "full"
	CreditTypeEnum_PRORATED CreditTypeEnum = "prorated"
	CreditTypeEnum_NONE     CreditTypeEnum = "none"
)

// TaxConfigurationKindEnum is a string enum.
type TaxConfigurationKindEnum string

const (
	TaxConfigurationKindEnum_CUSTOM             TaxConfigurationKindEnum = "custom"
	TaxConfigurationKindEnum_ENUMMANAGEDAVALARA TaxConfigurationKindEnum = "managed avalara"
	TaxConfigurationKindEnum_ENUMLINKEDAVALARA  TaxConfigurationKindEnum = "linked avalara"
	TaxConfigurationKindEnum_ENUMDIGITALRIVER   TaxConfigurationKindEnum = "digital river"
)

// TaxDestinationAddressEnum is a string enum.
type TaxDestinationAddressEnum string

const (
	TaxDestinationAddressEnum_SHIPPINGTHENBILLING TaxDestinationAddressEnum = "shipping_then_billing"
	TaxDestinationAddressEnum_BILLINGTHENSHIPPING TaxDestinationAddressEnum = "billing_then_shipping"
	TaxDestinationAddressEnum_SHIPPINGONLY        TaxDestinationAddressEnum = "shipping_only"
	TaxDestinationAddressEnum_BILLINGONLY         TaxDestinationAddressEnum = "billing_only"
)

// CleanupScopeEnum is a string enum.
// all: Will clear all products, customers, and related subscriptions from the site. customers: Will clear only customers and related subscriptions (leaving the products untouched) for the site. Revenue will also be reset to 0.
type CleanupScopeEnum string

const (
	CleanupScopeEnum_ALL       CleanupScopeEnum = "all"
	CleanupScopeEnum_CUSTOMERS CleanupScopeEnum = "customers"
)

// SortingDirectionEnum is a string enum.
// Used for sorting results.
type SortingDirectionEnum string

const (
	SortingDirectionEnum_ASC  SortingDirectionEnum = "asc"
	SortingDirectionEnum_DESC SortingDirectionEnum = "desc"
)

// BasicDateFieldEnum is a string enum.
// Allows to filter by `created_at` or `updated_at`.
type BasicDateFieldEnum string

const (
	BasicDateFieldEnum_UPDATEDAT BasicDateFieldEnum = "updated_at"
	BasicDateFieldEnum_CREATEDAT BasicDateFieldEnum = "created_at"
)

// SubscriptionStateEnum is a string enum.
// The state of a subscription.
// * **Live States**
//     * `active` - A normal, active subscription. It is not in a trial and is paid and up to date.
//     * `assessing` - An internal (transient) state that indicates a subscription is in the middle of periodic assessment. Do not base any access decisions in your app on this state, as it may not always be exposed.
//     * `pending` - An internal (transient) state that indicates a subscription is in the creation process. Do not base any access decisions in your app on this state, as it may not always be exposed.
//     * `trialing` - A subscription in trialing state has a valid trial subscription. This type of subscription may transition to active once payment is received when the trial has ended. Otherwise, it may go to a Problem or End of Life state.
//     * `paused` - An internal state that indicates that your account with Advanced Billing is in arrears.
// * **Problem States**
//     * `past_due` - Indicates that the most recent payment has failed, and payment is past due for this subscription. If you have enabled our automated dunning, this subscription will be in the dunning process (additional status and callbacks from the dunning process will be available in the future). If you are handling dunning and payment updates yourself, you will want to use this state to initiate a payment update from your customers.
//     * `soft_failure` - Indicates that normal assessment/processing of the subscription has failed for a reason that cannot be fixed by the Customer. For example, a Soft Fail may result from a timeout at the gateway or incorrect credentials on your part. The subscriptions should be retried automatically. An interface is being built for you to review problems resulting from these events to take manual action when needed.
//     * `unpaid` - Indicates an unpaid subscription. A subscription is marked unpaid if the retry period expires and you have configured your [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) settings to have a Final Action of `mark the subscription unpaid`.
// * **End of Life States**
//     * `canceled` - Indicates a canceled subscription. This may happen at your request (via the API or the web interface) or due to the expiration of the [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405505141005) process without payment. See the [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404559291021) documentation for info on how to restart a canceled subscription.
//     While a subscription is canceled, its period will not advance, it will not accrue any new charges, and Advanced Billing will not attempt to collect the overdue balance.
//     * `expired` - Indicates a subscription that has expired due to running its normal life cycle. Some products may be configured to have an expiration period. An expired subscription then is one that stayed active until it fulfilled its full period.
//     * `failed_to_create` - Indicates that signup has failed. (You may see this state in a signup_failure webhook.)
//     * `on_hold` - Indicates that a subscription’s billing has been temporarily stopped. While it is expected that the subscription will resume and return to active status, this is still treated as an “End of Life” state because the customer is not paying for services during this time.
//     * `suspended` - Indicates that a prepaid subscription has used up all their prepayment balance. If a prepayment is applied, it will return to an active state.
//     * `trial_ended` - A subscription in a trial_ended state is a subscription that completed a no-obligation trial and did not have a card on file at the expiration of the trial period. See [Product Pricing – No Obligation Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221) for more details.
// See [Subscription States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773) for more info about subscription states and state transitions.
type SubscriptionStateEnum string

const (
	SubscriptionStateEnum_PENDING        SubscriptionStateEnum = "pending"
	SubscriptionStateEnum_FAILEDTOCREATE SubscriptionStateEnum = "failed_to_create"
	SubscriptionStateEnum_TRIALING       SubscriptionStateEnum = "trialing"
	SubscriptionStateEnum_ASSESSING      SubscriptionStateEnum = "assessing"
	SubscriptionStateEnum_ACTIVE         SubscriptionStateEnum = "active"
	SubscriptionStateEnum_SOFTFAILURE    SubscriptionStateEnum = "soft_failure"
	SubscriptionStateEnum_PASTDUE        SubscriptionStateEnum = "past_due"
	SubscriptionStateEnum_SUSPENDED      SubscriptionStateEnum = "suspended"
	SubscriptionStateEnum_CANCELED       SubscriptionStateEnum = "canceled"
	SubscriptionStateEnum_EXPIRED        SubscriptionStateEnum = "expired"
	SubscriptionStateEnum_PAUSED         SubscriptionStateEnum = "paused"
	SubscriptionStateEnum_UNPAID         SubscriptionStateEnum = "unpaid"
	SubscriptionStateEnum_TRIALENDED     SubscriptionStateEnum = "trial_ended"
	SubscriptionStateEnum_ONHOLD         SubscriptionStateEnum = "on_hold"
	SubscriptionStateEnum_AWAITINGSIGNUP SubscriptionStateEnum = "awaiting_signup"
)

// CancellationMethodEnum is a string enum.
// The process used to cancel the subscription, if the subscription has been canceled. It is nil if the subscription's state is not canceled.
type CancellationMethodEnum string

const (
	CancellationMethodEnum_MERCHANTUI    CancellationMethodEnum = "merchant_ui"
	CancellationMethodEnum_MERCHANTAPI   CancellationMethodEnum = "merchant_api"
	CancellationMethodEnum_DUNNING       CancellationMethodEnum = "dunning"
	CancellationMethodEnum_BILLINGPORTAL CancellationMethodEnum = "billing_portal"
)

// PaymentCollectionMethodEnum is a string enum.
// The type of payment collection to be used in the subscription. For legacy Statements Architecture valid options are - `invoice`, `automatic`. For current Relationship Invoicing Architecture valid options are - `remittance`, `automatic`, `prepaid`.
type PaymentCollectionMethodEnum string

const (
	PaymentCollectionMethodEnum_AUTOMATIC  PaymentCollectionMethodEnum = "automatic"
	PaymentCollectionMethodEnum_REMITTANCE PaymentCollectionMethodEnum = "remittance"
	PaymentCollectionMethodEnum_PREPAID    PaymentCollectionMethodEnum = "prepaid"
	PaymentCollectionMethodEnum_INVOICE    PaymentCollectionMethodEnum = "invoice"
)

// ExtendedIntervalUnitEnum is a string enum.
type ExtendedIntervalUnitEnum string

const (
	ExtendedIntervalUnitEnum_DAY   ExtendedIntervalUnitEnum = "day"
	ExtendedIntervalUnitEnum_MONTH ExtendedIntervalUnitEnum = "month"
	ExtendedIntervalUnitEnum_NEVER ExtendedIntervalUnitEnum = "never"
)

// IntervalUnitEnum is a string enum.
type IntervalUnitEnum string

const (
	IntervalUnitEnum_DAY   IntervalUnitEnum = "day"
	IntervalUnitEnum_MONTH IntervalUnitEnum = "month"
)

// CardTypeEnum is a string enum.
// The type of card used.
type CardTypeEnum string

const (
	CardTypeEnum_BOGUS              CardTypeEnum = "bogus"
	CardTypeEnum_VISA               CardTypeEnum = "visa"
	CardTypeEnum_MASTER             CardTypeEnum = "master"
	CardTypeEnum_DISCOVER           CardTypeEnum = "discover"
	CardTypeEnum_AMERICANEXPRESS    CardTypeEnum = "american_express"
	CardTypeEnum_DINERSCLUB         CardTypeEnum = "diners_club"
	CardTypeEnum_JCB                CardTypeEnum = "jcb"
	CardTypeEnum_ENUMSWITCH         CardTypeEnum = "switch"
	CardTypeEnum_SOLO               CardTypeEnum = "solo"
	CardTypeEnum_DANKORT            CardTypeEnum = "dankort"
	CardTypeEnum_MAESTRO            CardTypeEnum = "maestro"
	CardTypeEnum_LASER              CardTypeEnum = "laser"
	CardTypeEnum_FORBRUGSFORENINGEN CardTypeEnum = "forbrugsforeningen"
)

// CurrentVaultEnum is a string enum.
// The vault that stores the payment profile with the provided `vault_token`. Use `bogus` for testing.
type CurrentVaultEnum string

const (
	CurrentVaultEnum_ADYEN          CurrentVaultEnum = "adyen"
	CurrentVaultEnum_AUTHORIZENET   CurrentVaultEnum = "authorizenet"
	CurrentVaultEnum_AVALARA        CurrentVaultEnum = "avalara"
	CurrentVaultEnum_BEANSTREAM     CurrentVaultEnum = "beanstream"
	CurrentVaultEnum_BLUESNAP       CurrentVaultEnum = "blue_snap"
	CurrentVaultEnum_BOGUS          CurrentVaultEnum = "bogus"
	CurrentVaultEnum_BRAINTREEBLUE  CurrentVaultEnum = "braintree_blue"
	CurrentVaultEnum_CHECKOUT       CurrentVaultEnum = "checkout"
	CurrentVaultEnum_CYBERSOURCE    CurrentVaultEnum = "cybersource"
	CurrentVaultEnum_ELAVON         CurrentVaultEnum = "elavon"
	CurrentVaultEnum_EWAY           CurrentVaultEnum = "eway"
	CurrentVaultEnum_EWAYRAPIDSTD   CurrentVaultEnum = "eway_rapid_std"
	CurrentVaultEnum_FIRSTDATA      CurrentVaultEnum = "firstdata"
	CurrentVaultEnum_FORTE          CurrentVaultEnum = "forte"
	CurrentVaultEnum_GOCARDLESS     CurrentVaultEnum = "gocardless"
	CurrentVaultEnum_LITLE          CurrentVaultEnum = "litle"
	CurrentVaultEnum_MAXIOPAYMENTS  CurrentVaultEnum = "maxio_payments"
	CurrentVaultEnum_MODUSLINK      CurrentVaultEnum = "moduslink"
	CurrentVaultEnum_MONERIS        CurrentVaultEnum = "moneris"
	CurrentVaultEnum_NMI            CurrentVaultEnum = "nmi"
	CurrentVaultEnum_ORBITAL        CurrentVaultEnum = "orbital"
	CurrentVaultEnum_PAYMENTEXPRESS CurrentVaultEnum = "payment_express"
	CurrentVaultEnum_PIN            CurrentVaultEnum = "pin"
	CurrentVaultEnum_SQUARE         CurrentVaultEnum = "square"
	CurrentVaultEnum_STRIPECONNECT  CurrentVaultEnum = "stripe_connect"
	CurrentVaultEnum_TRUSTCOMMERCE  CurrentVaultEnum = "trust_commerce"
	CurrentVaultEnum_UNIPAAS        CurrentVaultEnum = "unipaas"
)

// PaymentTypeEnum is a string enum.
type PaymentTypeEnum string

const (
	PaymentTypeEnum_CREDITCARD    PaymentTypeEnum = "credit_card"
	PaymentTypeEnum_BANKACCOUNT   PaymentTypeEnum = "bank_account"
	PaymentTypeEnum_PAYPALACCOUNT PaymentTypeEnum = "paypal_account"
)

// BankAccountVaultEnum is a string enum.
// The vault that stores the payment profile with the provided vault_token.
type BankAccountVaultEnum string

const (
	BankAccountVaultEnum_BOGUS         BankAccountVaultEnum = "bogus"
	BankAccountVaultEnum_AUTHORIZENET  BankAccountVaultEnum = "authorizenet"
	BankAccountVaultEnum_STRIPECONNECT BankAccountVaultEnum = "stripe_connect"
	BankAccountVaultEnum_BRAINTREEBLUE BankAccountVaultEnum = "braintree_blue"
	BankAccountVaultEnum_GOCARDLESS    BankAccountVaultEnum = "gocardless"
)

// PricePointTypeEnum is a string enum.
// Price point type. We expose the following types:
// 1. **default**: a price point that is marked as a default price for a certain product.
// 2. **custom**: a custom price point.
// 3. **catalog**: a price point that is **not** marked as a default price for a certain product and is **not** a custom one.
type PricePointTypeEnum string

const (
	PricePointTypeEnum_CATALOG     PricePointTypeEnum = "catalog"
	PricePointTypeEnum_ENUMDEFAULT PricePointTypeEnum = "default"
	PricePointTypeEnum_CUSTOM      PricePointTypeEnum = "custom"
)

// AutoInviteEnum is a int enum.
type AutoInviteEnum int

const (
	AutoInviteEnum_NO  AutoInviteEnum = 0
	AutoInviteEnum_YES AutoInviteEnum = 1
)

// ResourceTypeEnum is a string enum.
type ResourceTypeEnum string

const (
	ResourceTypeEnum_SUBSCRIPTIONS ResourceTypeEnum = "subscriptions"
	ResourceTypeEnum_CUSTOMERS     ResourceTypeEnum = "customers"
)

// IncludeOptionEnum is a string enum.
type IncludeOptionEnum string

const (
	IncludeOptionEnum_EXCLUDE IncludeOptionEnum = "0"
	IncludeOptionEnum_INCLUDE IncludeOptionEnum = "1"
)

// MetafieldInputEnum is a string enum.
// Indicates how data should be added to the metafield. For example, a text type is just a string, so a given metafield of this type can have any value attached. On the other hand, dropdown and radio have a set of allowed values that can be input, and appear differently on a Public Signup Page.
type MetafieldInputEnum string

const (
	MetafieldInputEnum_BALANCETRACKER MetafieldInputEnum = "balance_tracker"
	MetafieldInputEnum_TEXT           MetafieldInputEnum = "text"
	MetafieldInputEnum_RADIO          MetafieldInputEnum = "radio"
	MetafieldInputEnum_DROPDOWN       MetafieldInputEnum = "dropdown"
)

// CompoundingStrategyEnum is a string enum.
type CompoundingStrategyEnum string

const (
	CompoundingStrategyEnum_COMPOUND  CompoundingStrategyEnum = "compound"
	CompoundingStrategyEnum_FULLPRICE CompoundingStrategyEnum = "full-price"
)

// RecurringSchemeEnum is a string enum.
type RecurringSchemeEnum string

const (
	RecurringSchemeEnum_DONOTRECUR        RecurringSchemeEnum = "do_not_recur"
	RecurringSchemeEnum_RECURINDEFINITELY RecurringSchemeEnum = "recur_indefinitely"
	RecurringSchemeEnum_RECURWITHDURATION RecurringSchemeEnum = "recur_with_duration"
)

// DiscountTypeEnum is a string enum.
type DiscountTypeEnum string

const (
	DiscountTypeEnum_AMOUNT  DiscountTypeEnum = "amount"
	DiscountTypeEnum_PERCENT DiscountTypeEnum = "percent"
)

// RestrictionTypeEnum is a string enum.
type RestrictionTypeEnum string

const (
	RestrictionTypeEnum_COMPONENT RestrictionTypeEnum = "Component"
	RestrictionTypeEnum_PRODUCT   RestrictionTypeEnum = "Product"
)

// DirectionEnum is a string enum.
type DirectionEnum string

const (
	DirectionEnum_ASC  DirectionEnum = "asc"
	DirectionEnum_DESC DirectionEnum = "desc"
)

// EventTypeEnum is a string enum.
type EventTypeEnum string

const (
	EventTypeEnum_ACCOUNTTRANSACTIONCHANGED                      EventTypeEnum = "account_transaction_changed"
	EventTypeEnum_BILLINGDATECHANGE                              EventTypeEnum = "billing_date_change"
	EventTypeEnum_COMPONENTALLOCATIONCHANGE                      EventTypeEnum = "component_allocation_change"
	EventTypeEnum_CUSTOMERUPDATE                                 EventTypeEnum = "customer_update"
	EventTypeEnum_CUSTOMERCREATE                                 EventTypeEnum = "customer_create"
	EventTypeEnum_DUNNINGSTEPREACHED                             EventTypeEnum = "dunning_step_reached"
	EventTypeEnum_EXPIRATIONDATECHANGE                           EventTypeEnum = "expiration_date_change"
	EventTypeEnum_EXPIRINGCARD                                   EventTypeEnum = "expiring_card"
	EventTypeEnum_METEREDUSAGE                                   EventTypeEnum = "metered_usage"
	EventTypeEnum_PAYMENTSUCCESS                                 EventTypeEnum = "payment_success"
	EventTypeEnum_PAYMENTSUCCESSRECREATED                        EventTypeEnum = "payment_success_recreated"
	EventTypeEnum_PAYMENTFAILURE                                 EventTypeEnum = "payment_failure"
	EventTypeEnum_PAYMENTFAILURERECREATED                        EventTypeEnum = "payment_failure_recreated"
	EventTypeEnum_REFUNDFAILURE                                  EventTypeEnum = "refund_failure"
	EventTypeEnum_REFUNDSUCCESS                                  EventTypeEnum = "refund_success"
	EventTypeEnum_RENEWALSUCCESS                                 EventTypeEnum = "renewal_success"
	EventTypeEnum_RENEWALSUCCESSRECREATED                        EventTypeEnum = "renewal_success_recreated"
	EventTypeEnum_RENEWALFAILURE                                 EventTypeEnum = "renewal_failure"
	EventTypeEnum_SIGNUPSUCCESS                                  EventTypeEnum = "signup_success"
	EventTypeEnum_SIGNUPFAILURE                                  EventTypeEnum = "signup_failure"
	EventTypeEnum_STATEMENTCLOSED                                EventTypeEnum = "statement_closed"
	EventTypeEnum_STATEMENTSETTLED                               EventTypeEnum = "statement_settled"
	EventTypeEnum_SUBSCRIPTIONBANKACCOUNTUPDATE                  EventTypeEnum = "subscription_bank_account_update"
	EventTypeEnum_SUBSCRIPTIONDELETION                           EventTypeEnum = "subscription_deletion"
	EventTypeEnum_SUBSCRIPTIONPAYPALACCOUNTUPDATE                EventTypeEnum = "subscription_paypal_account_update"
	EventTypeEnum_SUBSCRIPTIONPRODUCTCHANGE                      EventTypeEnum = "subscription_product_change"
	EventTypeEnum_SUBSCRIPTIONSTATECHANGE                        EventTypeEnum = "subscription_state_change"
	EventTypeEnum_TRIALENDNOTICE                                 EventTypeEnum = "trial_end_notice"
	EventTypeEnum_UPGRADEDOWNGRADESUCCESS                        EventTypeEnum = "upgrade_downgrade_success"
	EventTypeEnum_UPGRADEDOWNGRADEFAILURE                        EventTypeEnum = "upgrade_downgrade_failure"
	EventTypeEnum_UPCOMINGRENEWALNOTICE                          EventTypeEnum = "upcoming_renewal_notice"
	EventTypeEnum_CUSTOMFIELDVALUECHANGE                         EventTypeEnum = "custom_field_value_change"
	EventTypeEnum_SUBSCRIPTIONPREPAYMENTACCOUNTBALANCECHANGED    EventTypeEnum = "subscription_prepayment_account_balance_changed"
	EventTypeEnum_SUBSCRIPTIONSERVICECREDITACCOUNTBALANCECHANGED EventTypeEnum = "subscription_service_credit_account_balance_changed"
)

// ListEventsDateFieldEnum is a string enum.
type ListEventsDateFieldEnum string

const (
	ListEventsDateFieldEnum_CREATEDAT ListEventsDateFieldEnum = "created_at"
)

// BankAccountTypeEnum is a string enum.
type BankAccountTypeEnum string

const (
	BankAccountTypeEnum_CHECKING BankAccountTypeEnum = "checking"
	BankAccountTypeEnum_SAVINGS  BankAccountTypeEnum = "savings"
)

// HolderTypeEnum is a string enum.
type HolderTypeEnum string

const (
	HolderTypeEnum_PERSONAL HolderTypeEnum = "personal"
	HolderTypeEnum_BUSINESS HolderTypeEnum = "business"
)

// PricingSchemeEnum is a string enum.
// The identifier for the pricing scheme. See [Product Components](https://help.chargify.com/products/product-components.html) for an overview of pricing schemes.
type PricingSchemeEnum string

const (
	PricingSchemeEnum_STAIRSTEP PricingSchemeEnum = "stairstep"
	PricingSchemeEnum_VOLUME    PricingSchemeEnum = "volume"
	PricingSchemeEnum_PERUNIT   PricingSchemeEnum = "per_unit"
	PricingSchemeEnum_TIERED    PricingSchemeEnum = "tiered"
)

// FirstChargeTypeEnum is a string enum.
type FirstChargeTypeEnum string

const (
	FirstChargeTypeEnum_PRORATED  FirstChargeTypeEnum = "prorated"
	FirstChargeTypeEnum_IMMEDIATE FirstChargeTypeEnum = "immediate"
	FirstChargeTypeEnum_DELAYED   FirstChargeTypeEnum = "delayed"
)

// ComponentKindPathEnum is a string enum.
type ComponentKindPathEnum string

const (
	ComponentKindPathEnum_METEREDCOMPONENTS       ComponentKindPathEnum = "metered_components"
	ComponentKindPathEnum_QUANTITYBASEDCOMPONENTS ComponentKindPathEnum = "quantity_based_components"
	ComponentKindPathEnum_ONOFFCOMPONENTS         ComponentKindPathEnum = "on_off_components"
	ComponentKindPathEnum_PREPAIDUSAGECOMPONENTS  ComponentKindPathEnum = "prepaid_usage_components"
	ComponentKindPathEnum_EVENTBASEDCOMPONENTS    ComponentKindPathEnum = "event_based_components"
)

// ComponentKindEnum is a string enum.
// A handle for the component type
type ComponentKindEnum string

const (
	ComponentKindEnum_METEREDCOMPONENT       ComponentKindEnum = "metered_component"
	ComponentKindEnum_QUANTITYBASEDCOMPONENT ComponentKindEnum = "quantity_based_component"
	ComponentKindEnum_ONOFFCOMPONENT         ComponentKindEnum = "on_off_component"
	ComponentKindEnum_PREPAIDUSAGECOMPONENT  ComponentKindEnum = "prepaid_usage_component"
	ComponentKindEnum_EVENTBASEDCOMPONENT    ComponentKindEnum = "event_based_component"
)

// ItemCategoryEnum is a string enum.
// One of the following: Business Software, Consumer Software, Digital Services, Physical Goods, Other
type ItemCategoryEnum string

const (
	ItemCategoryEnum_ENUMBUSINESSSOFTWARE ItemCategoryEnum = "Business Software"
	ItemCategoryEnum_ENUMCONSUMERSOFTWARE ItemCategoryEnum = "Consumer Software"
	ItemCategoryEnum_ENUMDIGITALSERVICES  ItemCategoryEnum = "Digital Services"
	ItemCategoryEnum_ENUMPHYSICALGOODS    ItemCategoryEnum = "Physical Goods"
	ItemCategoryEnum_OTHER                ItemCategoryEnum = "Other"
)

// CurrencyPriceRoleEnum is a string enum.
// Role for the price.
type CurrencyPriceRoleEnum string

const (
	CurrencyPriceRoleEnum_BASELINE CurrencyPriceRoleEnum = "baseline"
	CurrencyPriceRoleEnum_TRIAL    CurrencyPriceRoleEnum = "trial"
	CurrencyPriceRoleEnum_INITIAL  CurrencyPriceRoleEnum = "initial"
)

// ListProductsIncludeEnum is a string enum.
type ListProductsIncludeEnum string

const (
	ListProductsIncludeEnum_PREPAIDPRODUCTPRICEPOINT ListProductsIncludeEnum = "prepaid_product_price_point"
)

// IncludeNotNullEnum is a string enum.
// Passed as a parameter to list methods to return only non null values.
type IncludeNotNullEnum string

const (
	IncludeNotNullEnum_NOTNULL IncludeNotNullEnum = "not_null"
)

// StatusEnum is a string enum.
// The current status of the invoice. See [Invoice Statuses](https://chargify.zendesk.com/hc/en-us/articles/4407737494171#line-item-breakdowns) for more.
type StatusEnum string

const (
	StatusEnum_DRAFT    StatusEnum = "draft"
	StatusEnum_OPEN     StatusEnum = "open"
	StatusEnum_PAID     StatusEnum = "paid"
	StatusEnum_PENDING  StatusEnum = "pending"
	StatusEnum_VOIDED   StatusEnum = "voided"
	StatusEnum_CANCELED StatusEnum = "canceled"
)

// InvoiceConsolidationLevelEnum is a string enum.
// Consolidation level of the invoice, which is applicable to invoice consolidation.  It will hold one of the following values:
// * "none": A normal invoice with no consolidation.
// * "child": An invoice segment which has been combined into a consolidated invoice.
// * "parent": A consolidated invoice, whose contents are composed of invoice segments.
// "Parent" invoices do not have lines of their own, but they have subtotals and totals which aggregate the member invoice segments.
// See also the [invoice consolidation documentation](https://chargify.zendesk.com/hc/en-us/articles/4407746391835).
type InvoiceConsolidationLevelEnum string

const (
	InvoiceConsolidationLevelEnum_NONE   InvoiceConsolidationLevelEnum = "none"
	InvoiceConsolidationLevelEnum_CHILD  InvoiceConsolidationLevelEnum = "child"
	InvoiceConsolidationLevelEnum_PARENT InvoiceConsolidationLevelEnum = "parent"
)

// InvoiceDateFieldEnum is a string enum.
type InvoiceDateFieldEnum string

const (
	InvoiceDateFieldEnum_CREATEDAT InvoiceDateFieldEnum = "created_at"
	InvoiceDateFieldEnum_DUEDATE   InvoiceDateFieldEnum = "due_date"
	InvoiceDateFieldEnum_ISSUEDATE InvoiceDateFieldEnum = "issue_date"
	InvoiceDateFieldEnum_UPDATEDAT InvoiceDateFieldEnum = "updated_at"
	InvoiceDateFieldEnum_PAIDDATE  InvoiceDateFieldEnum = "paid_date"
)

// InvoiceSortFieldEnum is a string enum.
type InvoiceSortFieldEnum string

const (
	InvoiceSortFieldEnum_STATUS      InvoiceSortFieldEnum = "status"
	InvoiceSortFieldEnum_TOTALAMOUNT InvoiceSortFieldEnum = "total_amount"
	InvoiceSortFieldEnum_DUEAMOUNT   InvoiceSortFieldEnum = "due_amount"
	InvoiceSortFieldEnum_CREATEDAT   InvoiceSortFieldEnum = "created_at"
	InvoiceSortFieldEnum_UPDATEDAT   InvoiceSortFieldEnum = "updated_at"
	InvoiceSortFieldEnum_ISSUEDATE   InvoiceSortFieldEnum = "issue_date"
	InvoiceSortFieldEnum_DUEDATE     InvoiceSortFieldEnum = "due_date"
	InvoiceSortFieldEnum_NUMBER      InvoiceSortFieldEnum = "number"
)

// InvoiceEventTypeEnum is a string enum.
// Invoice Event Type
type InvoiceEventTypeEnum string

const (
	InvoiceEventTypeEnum_ISSUEINVOICE                  InvoiceEventTypeEnum = "issue_invoice"
	InvoiceEventTypeEnum_APPLYCREDITNOTE               InvoiceEventTypeEnum = "apply_credit_note"
	InvoiceEventTypeEnum_CREATECREDITNOTE              InvoiceEventTypeEnum = "create_credit_note"
	InvoiceEventTypeEnum_APPLYPAYMENT                  InvoiceEventTypeEnum = "apply_payment"
	InvoiceEventTypeEnum_APPLYDEBITNOTE                InvoiceEventTypeEnum = "apply_debit_note"
	InvoiceEventTypeEnum_REFUNDINVOICE                 InvoiceEventTypeEnum = "refund_invoice"
	InvoiceEventTypeEnum_VOIDINVOICE                   InvoiceEventTypeEnum = "void_invoice"
	InvoiceEventTypeEnum_VOIDREMAINDER                 InvoiceEventTypeEnum = "void_remainder"
	InvoiceEventTypeEnum_BACKPORTINVOICE               InvoiceEventTypeEnum = "backport_invoice"
	InvoiceEventTypeEnum_CHANGEINVOICESTATUS           InvoiceEventTypeEnum = "change_invoice_status"
	InvoiceEventTypeEnum_CHANGEINVOICECOLLECTIONMETHOD InvoiceEventTypeEnum = "change_invoice_collection_method"
	InvoiceEventTypeEnum_REMOVEPAYMENT                 InvoiceEventTypeEnum = "remove_payment"
	InvoiceEventTypeEnum_FAILEDPAYMENT                 InvoiceEventTypeEnum = "failed_payment"
	InvoiceEventTypeEnum_CHANGECHARGEBACKSTATUS        InvoiceEventTypeEnum = "change_chargeback_status"
)

// InvoicePaymentMethodTypeEnum is a string enum.
// The type of payment method used.
type InvoicePaymentMethodTypeEnum string

const (
	InvoicePaymentMethodTypeEnum_CREDITCARD InvoicePaymentMethodTypeEnum = "credit_card"
	InvoicePaymentMethodTypeEnum_CHECK      InvoicePaymentMethodTypeEnum = "check"
	InvoicePaymentMethodTypeEnum_CASH       InvoicePaymentMethodTypeEnum = "cash"
	InvoicePaymentMethodTypeEnum_MONEYORDER InvoicePaymentMethodTypeEnum = "money_order"
	InvoicePaymentMethodTypeEnum_ACH        InvoicePaymentMethodTypeEnum = "ach"
	InvoicePaymentMethodTypeEnum_OTHER      InvoicePaymentMethodTypeEnum = "other"
)

// InvoicePaymentTypeEnum is a string enum.
// The type of payment to be applied to an Invoice.
type InvoicePaymentTypeEnum string

const (
	InvoicePaymentTypeEnum_EXTERNAL      InvoicePaymentTypeEnum = "external"
	InvoicePaymentTypeEnum_PREPAYMENT    InvoicePaymentTypeEnum = "prepayment"
	InvoicePaymentTypeEnum_SERVICECREDIT InvoicePaymentTypeEnum = "service_credit"
	InvoicePaymentTypeEnum_PAYMENT       InvoicePaymentTypeEnum = "payment"
)

// SubscriptionListDateFieldEnum is a string enum.
type SubscriptionListDateFieldEnum string

const (
	SubscriptionListDateFieldEnum_UPDATEDAT SubscriptionListDateFieldEnum = "updated_at"
)

// ListSubscriptionComponentsSortEnum is a string enum.
type ListSubscriptionComponentsSortEnum string

const (
	ListSubscriptionComponentsSortEnum_ID        ListSubscriptionComponentsSortEnum = "id"
	ListSubscriptionComponentsSortEnum_UPDATEDAT ListSubscriptionComponentsSortEnum = "updated_at"
)

// ListSubscriptionComponentsIncludeEnum is a string enum.
type ListSubscriptionComponentsIncludeEnum string

const (
	ListSubscriptionComponentsIncludeEnum_SUBSCRIPTION ListSubscriptionComponentsIncludeEnum = "subscription"
)

// PaymentCollectionMethod1Enum is a string enum.
// (Optional) If not passed, the allocation(s) will use the payment collection method on the subscription
type PaymentCollectionMethod1Enum string

const (
	PaymentCollectionMethod1Enum_AUTOMATIC  PaymentCollectionMethod1Enum = "automatic"
	PaymentCollectionMethod1Enum_REMITTANCE PaymentCollectionMethod1Enum = "remittance"
	PaymentCollectionMethod1Enum_PREPAID    PaymentCollectionMethod1Enum = "prepaid"
	PaymentCollectionMethod1Enum_INVOICE    PaymentCollectionMethod1Enum = "invoice"
)

// CreditSchemeEnum is a string enum.
type CreditSchemeEnum string

const (
	CreditSchemeEnum_NONE   CreditSchemeEnum = "none"
	CreditSchemeEnum_CREDIT CreditSchemeEnum = "credit"
	CreditSchemeEnum_REFUND CreditSchemeEnum = "refund"
)

// GroupTargetTypeEnum is a string enum.
// The type of object indicated by the id attribute.
type GroupTargetTypeEnum string

const (
	GroupTargetTypeEnum_CUSTOMER     GroupTargetTypeEnum = "customer"
	GroupTargetTypeEnum_SUBSCRIPTION GroupTargetTypeEnum = "subscription"
	GroupTargetTypeEnum_SELF         GroupTargetTypeEnum = "self"
	GroupTargetTypeEnum_PARENT       GroupTargetTypeEnum = "parent"
	GroupTargetTypeEnum_ELDEST       GroupTargetTypeEnum = "eldest"
)

// SubscriptionStateFilterEnum is a string enum.
// Allowed values for filtering by the current state of the subscription.
type SubscriptionStateFilterEnum string

const (
	SubscriptionStateFilterEnum_ACTIVE              SubscriptionStateFilterEnum = "active"
	SubscriptionStateFilterEnum_CANCELED            SubscriptionStateFilterEnum = "canceled"
	SubscriptionStateFilterEnum_EXPIRED             SubscriptionStateFilterEnum = "expired"
	SubscriptionStateFilterEnum_EXPIREDCARDS        SubscriptionStateFilterEnum = "expired_cards"
	SubscriptionStateFilterEnum_ONHOLD              SubscriptionStateFilterEnum = "on_hold"
	SubscriptionStateFilterEnum_PASTDUE             SubscriptionStateFilterEnum = "past_due"
	SubscriptionStateFilterEnum_PENDINGCANCELLATION SubscriptionStateFilterEnum = "pending_cancellation"
	SubscriptionStateFilterEnum_PENDINGRENEWAL      SubscriptionStateFilterEnum = "pending_renewal"
	SubscriptionStateFilterEnum_SUSPENDED           SubscriptionStateFilterEnum = "suspended"
	SubscriptionStateFilterEnum_TRIALENDED          SubscriptionStateFilterEnum = "trial_ended"
	SubscriptionStateFilterEnum_TRIALING            SubscriptionStateFilterEnum = "trialing"
	SubscriptionStateFilterEnum_UNPAID              SubscriptionStateFilterEnum = "unpaid"
)

// SubscriptionDateFieldEnum is a string enum.
type SubscriptionDateFieldEnum string

const (
	SubscriptionDateFieldEnum_CURRENTPERIODENDSAT   SubscriptionDateFieldEnum = "current_period_ends_at"
	SubscriptionDateFieldEnum_CURRENTPERIODSTARTSAT SubscriptionDateFieldEnum = "current_period_starts_at"
	SubscriptionDateFieldEnum_CREATEDAT             SubscriptionDateFieldEnum = "created_at"
	SubscriptionDateFieldEnum_ACTIVATEDAT           SubscriptionDateFieldEnum = "activated_at"
	SubscriptionDateFieldEnum_CANCELEDAT            SubscriptionDateFieldEnum = "canceled_at"
	SubscriptionDateFieldEnum_EXPIRESAT             SubscriptionDateFieldEnum = "expires_at"
	SubscriptionDateFieldEnum_TRIALSTARTEDAT        SubscriptionDateFieldEnum = "trial_started_at"
	SubscriptionDateFieldEnum_TRIALENDEDAT          SubscriptionDateFieldEnum = "trial_ended_at"
	SubscriptionDateFieldEnum_UPDATEDAT             SubscriptionDateFieldEnum = "updated_at"
)

// SubscriptionSortEnum is a string enum.
type SubscriptionSortEnum string

const (
	SubscriptionSortEnum_SIGNUPDATE     SubscriptionSortEnum = "signup_date"
	SubscriptionSortEnum_PERIODSTART    SubscriptionSortEnum = "period_start"
	SubscriptionSortEnum_PERIODEND      SubscriptionSortEnum = "period_end"
	SubscriptionSortEnum_NEXTASSESSMENT SubscriptionSortEnum = "next_assessment"
	SubscriptionSortEnum_UPDATEDAT      SubscriptionSortEnum = "updated_at"
	SubscriptionSortEnum_CREATEDAT      SubscriptionSortEnum = "created_at"
)

// SubscriptionIncludeEnum is a string enum.
type SubscriptionIncludeEnum string

const (
	SubscriptionIncludeEnum_COUPONS              SubscriptionIncludeEnum = "coupons"
	SubscriptionIncludeEnum_SELFSERVICEPAGETOKEN SubscriptionIncludeEnum = "self_service_page_token"
)

// ResumptionChargeEnum is a string enum.
// (For calendar billing subscriptions only) The way that the resumed subscription's charge should be handled
type ResumptionChargeEnum string

const (
	ResumptionChargeEnum_PRORATED  ResumptionChargeEnum = "prorated"
	ResumptionChargeEnum_IMMEDIATE ResumptionChargeEnum = "immediate"
	ResumptionChargeEnum_DELAYED   ResumptionChargeEnum = "delayed"
)

// ReactivationChargeEnum is a string enum.
// You may choose how to handle the reactivation charge for that subscription: 1) `prorated` A prorated charge for the product price will be attempted for to complete the period 2) `immediate` A full-price charge for the product price will be attempted immediately 3) `delayed` A full-price charge for the product price will be attempted at the next renewal
type ReactivationChargeEnum string

const (
	ReactivationChargeEnum_PRORATED  ReactivationChargeEnum = "prorated"
	ReactivationChargeEnum_IMMEDIATE ReactivationChargeEnum = "immediate"
	ReactivationChargeEnum_DELAYED   ReactivationChargeEnum = "delayed"
)

// Status1Enum is a string enum.
type Status1Enum string

const (
	Status1Enum_DRAFT Status1Enum = "draft"
	Status1Enum_OPEN  Status1Enum = "open"
)

// PrepaymentMethodEnum is a string enum.
// :- When the `method` specified is `"credit_card_on_file"`, the prepayment amount will be collected using the default credit card payment profile and applied to the prepayment account balance. This is especially useful for manual replenishment of prepaid subscriptions.
type PrepaymentMethodEnum string

const (
	PrepaymentMethodEnum_CHECK            PrepaymentMethodEnum = "check"
	PrepaymentMethodEnum_CASH             PrepaymentMethodEnum = "cash"
	PrepaymentMethodEnum_MONEYORDER       PrepaymentMethodEnum = "money_order"
	PrepaymentMethodEnum_ACH              PrepaymentMethodEnum = "ach"
	PrepaymentMethodEnum_PAYPALACCOUNT    PrepaymentMethodEnum = "paypal_account"
	PrepaymentMethodEnum_CREDITCARDONFILE PrepaymentMethodEnum = "credit_card_on_file"
	PrepaymentMethodEnum_OTHER            PrepaymentMethodEnum = "other"
)

// ServiceCreditTypeEnum is a string enum.
// The type of entry
type ServiceCreditTypeEnum string

const (
	ServiceCreditTypeEnum_CREDIT ServiceCreditTypeEnum = "Credit"
	ServiceCreditTypeEnum_DEBIT  ServiceCreditTypeEnum = "Debit"
)

// SubscriptionGroupPrepaymentMethodEnum is a string enum.
type SubscriptionGroupPrepaymentMethodEnum string

const (
	SubscriptionGroupPrepaymentMethodEnum_CHECK         SubscriptionGroupPrepaymentMethodEnum = "check"
	SubscriptionGroupPrepaymentMethodEnum_CASH          SubscriptionGroupPrepaymentMethodEnum = "cash"
	SubscriptionGroupPrepaymentMethodEnum_MONEYORDER    SubscriptionGroupPrepaymentMethodEnum = "money_order"
	SubscriptionGroupPrepaymentMethodEnum_ACH           SubscriptionGroupPrepaymentMethodEnum = "ach"
	SubscriptionGroupPrepaymentMethodEnum_PAYPALACCOUNT SubscriptionGroupPrepaymentMethodEnum = "paypal_account"
	SubscriptionGroupPrepaymentMethodEnum_OTHER         SubscriptionGroupPrepaymentMethodEnum = "other"
)

// ListSubscriptionGroupPrepaymentDateFieldEnum is a string enum.
type ListSubscriptionGroupPrepaymentDateFieldEnum string

const (
	ListSubscriptionGroupPrepaymentDateFieldEnum_CREATEDAT     ListSubscriptionGroupPrepaymentDateFieldEnum = "created_at"
	ListSubscriptionGroupPrepaymentDateFieldEnum_APPLICATIONAT ListSubscriptionGroupPrepaymentDateFieldEnum = "application_at"
)

// SubscriptionPurgeTypeEnum is a string enum.
type SubscriptionPurgeTypeEnum string

const (
	SubscriptionPurgeTypeEnum_CUSTOMER       SubscriptionPurgeTypeEnum = "customer"
	SubscriptionPurgeTypeEnum_PAYMENTPROFILE SubscriptionPurgeTypeEnum = "payment_profile"
)

// FailedPaymentActionEnum is a string enum.
// Action taken when payment for an invoice fails:
// - `leave_open_invoice` - prepayments and credits applied to invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history. This is the default option.
// - `rollback_to_pending` - prepayments and credits not applied; invoice remains in "pending" status; no email sent to the customer; payment failure recorded in the invoice history.
// - `initiate_dunning` - prepayments and credits applied to the invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history; subscription will  most likely go into "past_due" or "canceled" state (depending upon net terms and dunning settings).
type FailedPaymentActionEnum string

const (
	FailedPaymentActionEnum_LEAVEOPENINVOICE  FailedPaymentActionEnum = "leave_open_invoice"
	FailedPaymentActionEnum_ROLLBACKTOPENDING FailedPaymentActionEnum = "rollback_to_pending"
	FailedPaymentActionEnum_INITIATEDUNNING   FailedPaymentActionEnum = "initiate_dunning"
)

// ListComponentsPricePointsIncludeEnum is a string enum.
type ListComponentsPricePointsIncludeEnum string

const (
	ListComponentsPricePointsIncludeEnum_CURRENCYPRICES ListComponentsPricePointsIncludeEnum = "currency_prices"
)

// ListProductsPricePointsIncludeEnum is a string enum.
type ListProductsPricePointsIncludeEnum string

const (
	ListProductsPricePointsIncludeEnum_CURRENCYPRICES ListProductsPricePointsIncludeEnum = "currency_prices"
)
